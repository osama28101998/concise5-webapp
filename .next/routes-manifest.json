{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/(.*)",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization, x-refresh-token,x-assistant-id"
        }
      ],
      "regex": "^/api(?:/(.*))(?:/)?$"
    },
    {
      "source": "/api/(.*)/(.*)",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization, x-refresh-token,x-assistant-id"
        }
      ],
      "regex": "^/api(?:/(.*))(?:/(.*))(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/dashboard/[slug]",
      "regex": "^/dashboard/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/dashboard/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/personal-library/[title]",
      "regex": "^/personal\\-library/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtitle": "nxtPtitle"
      },
      "namedRegex": "^/personal\\-library/(?<nxtPtitle>[^/]+?)(?:/)?$"
    },
    {
      "page": "/team-activity/[slug]",
      "regex": "^/team\\-activity/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/team\\-activity/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/team-activity/[slug]/[title]",
      "regex": "^/team\\-activity/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug",
        "nxtPtitle": "nxtPtitle"
      },
      "namedRegex": "^/team\\-activity/(?<nxtPslug>[^/]+?)/(?<nxtPtitle>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/auth/confirm-otp",
      "regex": "^/auth/confirm\\-otp(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/confirm\\-otp(?:/)?$"
    },
    {
      "page": "/auth/forgot-password",
      "regex": "^/auth/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/forgot\\-password(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/reset-password",
      "regex": "^/auth/reset\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/reset\\-password(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/intro-video",
      "regex": "^/intro\\-video(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/intro\\-video(?:/)?$"
    },
    {
      "page": "/personal-library",
      "regex": "^/personal\\-library(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/personal\\-library(?:/)?$"
    },
    {
      "page": "/playlist",
      "regex": "^/playlist(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/playlist(?:/)?$"
    },
    {
      "page": "/privacy-policy",
      "regex": "^/privacy\\-policy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy\\-policy(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/scoreboard",
      "regex": "^/scoreboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/scoreboard(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/team-activity",
      "regex": "^/team\\-activity(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/team\\-activity(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}